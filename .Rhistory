get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience + level + gender,
data = salaries)
#aic_model_fix = lm(log(totalyearlycompensation) ~ company * title *
#    yearsofexperience * state + level + gender + Race + Education + yearsatcompany,
#   data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
#summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_trans)
get_loocv_rmse(salaries_model)
get_loocv_rmse(salaries_model_fix)
#shapiro.test(resid(aic_model_fix))
#bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience + level + gender + Race + Education,
data = salaries)
#aic_model_fix = lm(log(totalyearlycompensation) ~ company * title *
#    yearsofexperience * state + level + gender + Race + Education + yearsatcompany,
#   data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
#summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_trans)
get_loocv_rmse(salaries_model)
get_loocv_rmse(salaries_model_fix)
#shapiro.test(resid(aic_model_fix))
#bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(totalyearlycompensation ~ company * yearsofexperience + level + gender + Race + Education, data = salaries)
#aic_model_fix = lm(log(totalyearlycompensation) ~ company * title *
#    yearsofexperience * state + level + gender + Race + Education + yearsatcompany,
#   data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
#summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_trans)
get_loocv_rmse(salaries_model)
get_loocv_rmse(salaries_model_fix)
#shapiro.test(resid(aic_model_fix))
#bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience + level + title + gender + Race + Education + yearsatcompany, data = salaries)
#aic_model_fix = lm(log(totalyearlycompensation) ~ company * title *
#    yearsofexperience * state + level + gender + Race + Education + yearsatcompany,
#   data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
#summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_trans)
get_loocv_rmse(salaries_model)
get_loocv_rmse(salaries_model_fix)
#shapiro.test(resid(aic_model_fix))
#bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience + level + title + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ company * yearsofexperience + level + title + gender + Race + Education + yearsatcompany,
data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience * level + title + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ company * yearsofexperience + level + title + gender + Race + Education + yearsatcompany,
data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience * title + level + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ company * yearsofexperience + level + title + gender + Race + Education + yearsatcompany,
data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience * title + level + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ company * yearsofexperience * title + level + gender + Race + Education + yearsatcompany,
data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience + title + level + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ company * yearsofexperience + title + level + gender + Race + Education + yearsatcompany,
data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * log(yearsofexperience) + title + level + gender + Race + Education + yearsatcompany, data = salaries)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * title + yearsofexperience + level + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ company * title + yearsofexperience + level + gender + Race + Education + yearsatcompany,
data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience + yearsofexperience + level + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ company * yearsofexperience + yearsofexperience + level + gender + Race + Education + yearsatcompany,
data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience + title + level + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ company * yearsofexperience + title + level + gender + Race + Education + yearsatcompany,
data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company * yearsofexperience + company * title + level + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ company * yearsofexperience + company * title + level + gender + Race + Education + yearsatcompany,
data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education + yearsatcompany, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + level) ^ 2 + level + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + level) ^ 2 + level + gender + Race + Education + yearsatcompany, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + level) ^ 2 + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + level) ^ 2 + gender + Race + Education + yearsatcompany, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + state) ^ 2 + gender + Race + Education + yearsatcompany, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + state) ^ 2 + gender + Race + Education + yearsatcompany, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + gender + Race + Education + yearsatcompany) ^ 2 + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + gender + Race + Education + yearsatcompany) ^ 2 + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + gender + Race + Education + yearsatcompany) ^ 2 + title + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + gender + Race + Education + yearsatcompany) ^ 2 + title + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + gender + Race + Education) ^ 2 + yearsatcompany + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + gender + Race + Education) ^ 2 + yearsatcomapny + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + gender + Race + Education) ^ 2 + yearsatcompany + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + gender + Race + Education) ^ 2 + yearsatcompany + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ company + yearsofexperience + title + yearsatcompany) ^ 2  + level + gender + Race + Education, data = salaries)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + yearsatcompany) ^ 2  + level + gender + Race + Education, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + yearsatcompany) ^ 2  + level + gender + Race + Education, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + yearsatcompany + level) ^ 2  + gender + Race + Education, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + yearsatcompany + level) ^ 2  + gender + Race + Education, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + yearsatcompany + Race + Education) ^ 2  + gender + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + yearsatcompany + Race + Education) ^ 2  + gender + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + yearsatcompany + Race) ^ 2  + gender + Education + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + yearsatcompany + Race) ^ 2  + gender + Education + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + Race) ^ 2  + yearsatcomapny + gender + Education + level, data = salaries)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + Race) ^ 2  + yearsatcompany + gender + Education + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + Race) ^ 2  + yearsatcomapny + gender + Education + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + Race) ^ 2  + yearsatcompany + gender + Education + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + Race) ^ 2  + yearsatcompany + gender + Education + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + title + Race) ^ 2  + company + gender + Education + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + title + Race) ^ 2  + company + gender + Education + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + title) ^ 2  + company + gender + Race + Education + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + title) ^ 2  + company + gender + Race + Education + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + title + level) ^ 2  + company + gender + Race + Education + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + title + level) ^ 2  + company + gender + Race + Education + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + level) ^ 2  + company + gender + Race + Education + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + level) ^ 2  + company + gender + Race + Education + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education + level, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level) + gender + Race + Education + level, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsatcompany + title) ^ 2 + level + gender + Race + Education, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsatcompany + title) ^ 2 + level + gender + Race + Education, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + gender) ^ 2 + level + Race + Education, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title + gender) ^ 2 + level + Race + Education, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
View(salaries)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education, data = salaries)
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
par(mfrow = c(1, 2))
# Residuals vs Fitted values plot
plot(fitted(aic_model_fix), resid(aic_model_fix), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted versus Residuals")
abline(h = 0, col = "darkorange", lwd = 2)
# Q-Q plot
qqnorm(resid(aic_model_fix), main = "Normal Q-Q Plot", col = "darkgrey")
qqline(resid(aic_model_fix), col = "dodgerblue", lwd = 2)
library(car)
library(lmtest)
get_loocv_rmse = function(model){
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
#Check for collinearity
car::vif(salaries_model_both_aic) #Nothing too bad, perhaps level is high
#Transform log response and add interactions to predictors to improve normality, linearity, constant variance, adjusted R-squared, and loocv-RMSE
aic_model_trans = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education, data = salaries)
#Remove influential data from the model
aic_model_fix = lm(log(totalyearlycompensation) ~ (company + yearsofexperience + title) ^ 2 + level + gender + Race + Education, data = salaries, subset = cooks.distance(aic_model_trans) < 4 / length(cooks.distance(aic_model_trans)))
#Run diagnostics
summary(aic_model_fix)$adj
get_loocv_rmse(aic_model_fix)
shapiro.test(resid(aic_model_fix))
bptest(aic_model_fix)
#Plot diagnostics
par(mfrow = c(1, 2))
# Residuals vs Fitted values plot
plot(fitted(aic_model_fix), resid(aic_model_fix), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Fitted versus Residuals")
abline(h = 0, col = "darkorange", lwd = 2)
# Q-Q plot
qqnorm(resid(aic_model_fix), main = "Normal Q-Q Plot", col = "darkgrey")
qqline(resid(aic_model_fix), col = "dodgerblue", lwd = 2)
