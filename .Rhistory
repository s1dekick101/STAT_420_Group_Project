knitr::opts_chunk$set(echo = TRUE)
library(readr)
data = read_csv("Levels-Fyi-Salary-Data-Cleaned.csv")
data
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data = read_csv("Levels-Fyi-Salary-Data-Cleaned.csv")
data
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data = read_csv("Levels-Fyi-Salary-Data-Cleaned.csv")
data
# Loading dataset
library(readr)
library(stringr)
data = read_csv("Levels-Fyi-Salary-Data-Cleaned-US.csv")
#Remove NA records
data = na.omit(data)
#Create new column 'State' which only shows the Convert to State
data$state = str_sub(data$location,-2,-1)
# Subsetting dataset and changing some predictors to factors
data$company = as.factor(data$company)
data$level = as.factor(data$level)
data$title = as.factor(data$title)
data$location = as.factor(data$location)
data$state = as.factor(data$state)
data$gender = as.factor(data$gender)
data$Race = as.factor(data$Race)
data$Education = as.factor(data$Education)
library(lmtest)
salaries_model_add = lm(log(totalyearlycompensation) ~ yearsatcompany * company * level, data = salaries)
#Loading dataset
library(readr)
library(stringr)
salaries = read_csv("Levels-Fyi-Salary-Data-Cleaned-US.csv")
#Remove NA records
salaries = na.omit(salaries)
#Create new column 'State' which only shows the Convert to State
salaries$state = str_sub(salaries$location,-2,-1)
#Changing some predictors to factors
salaries$company = as.factor(salaries$company)
salaries$level = as.factor(salaries$level)
salaries$title = as.factor(salaries$title)
salaries$location = as.factor(salaries$location)
salaries$state = as.factor(salaries$state)
salaries$gender = as.factor(salaries$gender)
salaries$Race = as.factor(salaries$Race)
salaries$Education = as.factor(salaries$Education)
#Feel free to uncomment until we get confirmation from TA on removing columns or not
#Variable Selection: Removed variables that contained redundant information
#salaries = subset(salaries, select = c(company, level, title,
#                                       totalyearlycompensation,
#                                       yearsofexperience, yearsatcompany, tag,
#                                       basesalary, stockgrantvalue, bonus,
#                                       gender, Race, Education, state))
#Variable Selection: Removed variables that contained redundant information
salaries = subset(salaries, select = c(company, level, title,
totalyearlycompensation,
yearsofexperience, yearsatcompany, tag,
gender, Race, Education, state))
# Placeholder and we will just put the model we actually use here
model = 2
salaries_model = lm(totalyearlycompensation ~ ., data = salaries)
#Didnt use p but n was used for model BIC models
#p = length(coef(salaries_model))
n = length(resid(salaries_model))
#Backward AIC
salaries_model_back_aic = step(salaries_model,
direction = "backward", trace = 0)
#Backward BIC
salaries_model_back_bic = step(salaries_model, direction = "backward",
k = log(n), trace = 0)
salaries_model_start = lm(totalyearlycompensation ~ 1, data = salaries)
#Forward AIC
salaries_model_forw_aic = step(salaries_model_start,
scope = totalyearlycompensation ~ company + level +
title + yearsofexperience + yearsatcompany + tag +
gender + Race + Education + state,
direction = "forward", trace = 0)
#Forward BIC
salaries_model_forw_bic = step(salaries_model_start,
scope = totalyearlycompensation ~ company + level +
title + yearsofexperience + yearsatcompany + tag +
gender + Race + Education + state,
direction = "forward", k = log(n), trace = 0)
#Stepwise AIC
salaries_model_both_aic = step(salaries_model_start,
scope = totalyearlycompensation ~ company + level +
title + yearsofexperience + yearsatcompany + tag +
gender + Race + Education + state,
direction = "both", trace = 0)
#Stepwise BIC
salaries_model_both_bic = step(salaries_model_start,
scope = totalyearlycompensation ~ company + level +
title + yearsofexperience + yearsatcompany + tag +
gender + Race + Education + state,
direction = "both", k = log(n), trace = 0)
#AIC derives a model using 9 of the 10 initial inputted predictors
#salaries_model_back_aic
#salaries_model_forw_aic
#salaries_model_both_aic
#BIC derives a model using 4 of the 10 initial inputted predictors
#salaries_model_back_bic
#salaries_model_forw_bic
#salaries_model_both_bic
library(lmtest)
salaries_model_add = lm(log(totalyearlycompensation) ~ yearsatcompany * company * level, data = salaries)
summary(salaries_model_add)
salaries_model_fix = lm(log(totalyearlycompensation) ~ yearsatcompany * company * level, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
#anova(salaries_model_add, salaries_model_two_int)
#anova(salaries_model_two_int, salaries_model_three_int)
library(lmtest)
salaries_model_add = lm(log(totalyearlycompensation) ~ yearsatcompany * company * title, data = salaries)
summary(salaries_model_add)
salaries_model_fix = lm(log(totalyearlycompensation) ~ yearsatcompany * company * title, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
#anova(salaries_model_add, salaries_model_two_int)
#anova(salaries_model_two_int, salaries_model_three_int)
library(lmtest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state) ^ 2, data = salaries)
summary(salaries_model_add)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
#anova(salaries_model_add, salaries_model_two_int)
#anova(salaries_model_two_int, salaries_model_three_int)
library(lmtest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state + level) ^ 2, data = salaries)
summary(salaries_model_add)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state + level) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
#anova(salaries_model_add, salaries_model_two_int)
#anova(salaries_model_two_int, salaries_model_three_int)
ks.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
library(lmtest)
library(ggnorm)
library(lmtest)
library(nortest)
install.packages("nortest")
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state + level) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state + level) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + company + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + company + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + company + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + yearsofexperience + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsofexperience + yearsofexperience + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsofexperience + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsofexperience + company + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsofexperience + company + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsofexperience + level + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + level + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + level + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + level + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + level company + state + Race + Education) ^ 2, data = salaries)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + level title + state + Race + Education) ^ 2, data = salaries)
library(lmtest)
library(nortest)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + level + title + state + Race + Education) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + level + title + state + Race + Education) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(totalyearlycompensation ~ (yearsatcompany + level + title + state + Race + Education) ^ 2, data = salaries)
salaries_model_fix = lm(totalyearlycompensation ~ (yearsatcompany + level + title + state + Race + Education) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(totalyearlycompensation ~ (yearsatcompany + companyy + title + state) ^ 2, data = salaries)
library(lmtest)
library(nortest)
salaries_model_add = lm(totalyearlycompensation ~ (yearsatcompany + company + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(totalyearlycompensation ~ (yearsatcompany + company + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
salaries_model_add = lm(totalyearlycompensation ~ (yearsatcompany + company + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(totalyearlycompensation ~ (yearsatcompany + company + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
boxcox(salaries_model_fix, plotit = TRUE)
library(lmtest)
library(nortest)
library(MASS)
salaries_model_add = lm(totalyearlycompensation ~ (yearsatcompany + company + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(totalyearlycompensation ~ (yearsatcompany + company + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
boxcox(salaries_model_fix, plotit = TRUE)
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
library(lmtest)
library(nortest)
library(MASS)
salaries_model_add = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state) ^ 2, data = salaries)
salaries_model_fix = lm(log(totalyearlycompensation) ~ (yearsatcompany + company + title + state) ^ 2, data = salaries, subset = cooks.distance(salaries_model_add) < 4 / length(cooks.distance(salaries_model_add)))
boxcox(salaries_model_fix, plotit = TRUE)
hist(resid(salaries_model_fix))
#salaries_model_int = lm(totalyearlycompensation ~ level * title * yearsofexperience * yearsatcompany, data = salaries)
#anova(salaries_model_add, salaries_model_int)
#summary(salaries_model_int)
#salaries_model_three_int = lm(totalyearlycompensation ~ company * level * yearsofexperience, data = salaries)
qqnorm(resid(salaries_model_fix))
qqline(resid(salaries_model_fix))
plot(fitted(salaries_model_fix), resid(salaries_model_fix))
abline(h=0)
shapiro.test(resid(salaries_model_fix))
sf.test(resid(salaries_model_fix))
bptest(salaries_model_fix)
